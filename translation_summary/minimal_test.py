#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–µ—Å—Ç –¥–ª—è –≤—ã—è–≤–ª–µ–Ω–∏—è –ø—Ä–æ–±–ª–µ–º—ã —Å OpenAI
"""

import sys
import os
import traceback
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ src
sys.path.insert(0, str(Path(__file__).parent / "src"))

def test_step_by_step():
    """–¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ —à–∞–≥–∞–º, —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –ø—Ä–æ–±–ª–µ–º—É."""
    
    print("üîç –ü–æ—à–∞–≥–æ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞")
    print("=" * 50)
    
    # –®–∞–≥ 1: –ò–º–ø–æ—Ä—Ç OpenAI
    try:
        from openai import OpenAI
        print("‚úÖ –®–∞–≥ 1: OpenAI –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 1: –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ OpenAI: {e}")
        return False
    
    # –®–∞–≥ 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞
    api_key = os.getenv('OPENAI_API_KEY')
    if not api_key:
        print("‚ùå –®–∞–≥ 2: OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        return False
    print("‚úÖ –®–∞–≥ 2: API –∫–ª—é—á –Ω–∞–π–¥–µ–Ω")
    
    # –®–∞–≥ 3: –ò–º–ø–æ—Ä—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    try:
        from model_config import is_openai_model, get_model_type
        print("‚úÖ –®–∞–≥ 3: model_config –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
        print(f"  is_openai_model('gpt-4o'): {is_openai_model('gpt-4o')}")
        print(f"  get_model_type('gpt-4o'): {get_model_type('gpt-4o')}")
        
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 3: –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ model_config: {e}")
        traceback.print_exc()
        return False
    
    # –®–∞–≥ 4: –ò–º–ø–æ—Ä—Ç OpenAI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    try:
        from openai_handler import OpenAIHandler
        print("‚úÖ –®–∞–≥ 4: OpenAIHandler –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 4: –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ OpenAIHandler: {e}")
        traceback.print_exc()
        return False
    
    # –®–∞–≥ 5: –°–æ–∑–¥–∞–Ω–∏–µ OpenAI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    try:
        handler = OpenAIHandler("gpt-3.5-turbo", api_key=api_key, temperature=0.1)
        print("‚úÖ –®–∞–≥ 5: OpenAIHandler —Å–æ–∑–¥–∞–Ω")
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 5: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è OpenAIHandler: {e}")
        traceback.print_exc()
        return False
    
    # –®–∞–≥ 6: –ò–º–ø–æ—Ä—Ç LLMTranslator
    try:
        from llm_translator import LLMTranslator
        print("‚úÖ –®–∞–≥ 6: LLMTranslator –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω")
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 6: –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ LLMTranslator: {e}")
        traceback.print_exc()
        return False
    
    # –®–∞–≥ 7: –°–æ–∑–¥–∞–Ω–∏–µ LLMTranslator
    try:
        print("üß™ –®–∞–≥ 7: –°–æ–∑–¥–∞–Ω–∏–µ LLMTranslator...")
        translator = LLMTranslator("gpt-3.5-turbo", temperature=0.1)
        print("‚úÖ –®–∞–≥ 7: LLMTranslator —Å–æ–∑–¥–∞–Ω")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—Ç—Ä–∏–±—É—Ç—ã
        print(f"  model_name: {translator.model_name}")
        print(f"  model_type: {translator.model_type}")
        print(f"  has openai_handler: {hasattr(translator, 'openai_handler')}")
        if hasattr(translator, 'openai_handler'):
            print(f"  openai_handler is not None: {translator.openai_handler is not None}")
        
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 7: –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è LLMTranslator: {e}")
        traceback.print_exc()
        return False
    
    # –®–∞–≥ 8: –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥
    try:
        print("üß™ –®–∞–≥ 8: –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥...")
        result = translator.translate("Êàë", ["—è", "–º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ"], use_description=False)
        print(f"‚úÖ –®–∞–≥ 8: –ü–µ—Ä–µ–≤–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω: 'Êàë' -> '{result}'")
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 8: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–µ—Ä–µ–≤–æ–¥–µ: {e}")
        traceback.print_exc()
        return False
    
    # –®–∞–≥ 9: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    try:
        print("üß™ –®–∞–≥ 9: –ü–æ–ª—É—á–µ–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏...")
        stats = translator.get_statistics()
        print(f"‚úÖ –®–∞–≥ 9: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—É—á–µ–Ω–∞: {stats}")
    except Exception as e:
        print(f"‚ùå –®–∞–≥ 9: –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {e}")
        traceback.print_exc()
        return False
    
    print("\n‚úÖ –í—Å–µ —à–∞–≥–∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ–π–¥–µ–Ω—ã!")
    return True

if __name__ == "__main__":
    success = test_step_by_step()
    if not success:
        print("\n‚ùå –¢–µ—Å—Ç –Ω–µ –ø—Ä–æ–π–¥–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –æ—à–∏–±–∫–∏ –≤—ã—à–µ.")
        sys.exit(1)
    else:
        print("\nüéâ –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")
        sys.exit(0)
        