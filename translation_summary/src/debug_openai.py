#!/usr/bin/env python3
# -*- coding: utf-8 -*-

"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏ –ø—Ä–æ–±–ª–µ–º —Å OpenAI API
"""

import os
import sys
import traceback
from pathlib import Path

# –î–æ–±–∞–≤–ª—è–µ–º –ø—É—Ç—å –∫ –ø–∞–∫–µ—Ç—É
sys.path.append(str(Path(__file__).parent))

def check_openai_library():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –∏ –≤–µ—Ä—Å–∏—é –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ OpenAI."""
    try:
        import openai
        print(f"‚úÖ OpenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞, –≤–µ—Ä—Å–∏—è: {openai.__version__}")
        return True
    except ImportError as e:
        print(f"‚ùå OpenAI –±–∏–±–ª–∏–æ—Ç–µ–∫–∞ –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {e}")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π: pip install openai>=1.0.0")
        return False

def check_api_key():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ API –∫–ª—é—á–∞."""
    api_key = os.getenv('OPENAI_API_KEY')
    if api_key:
        print(f"‚úÖ OPENAI_API_KEY –Ω–∞–π–¥–µ–Ω (–¥–ª–∏–Ω–∞: {len(api_key)})")
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–æ—Ä–º–∞—Ç –∫–ª—é—á–∞
        if api_key.startswith('sk-') and len(api_key) > 20:
            print("‚úÖ –§–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞ –≤—ã–≥–ª—è–¥–∏—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return api_key
        else:
            print("‚ö†Ô∏è  –§–æ—Ä–º–∞—Ç API –∫–ª—é—á–∞ –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–º")
            return api_key
    else:
        print("‚ùå OPENAI_API_KEY –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
        print("–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–æ–º–∞–Ω–¥–æ–π: export OPENAI_API_KEY=your_key")
        return None

def test_openai_client(api_key):
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Å–æ–∑–¥–∞–Ω–∏–µ OpenAI –∫–ª–∏–µ–Ω—Ç–∞."""
    try:
        from openai import OpenAI
        client = OpenAI(api_key=api_key)
        print("‚úÖ OpenAI –∫–ª–∏–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        return client
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ OpenAI –∫–ª–∏–µ–Ω—Ç–∞: {e}")
        traceback.print_exc()
        return None

def test_openai_handler():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞—à OpenAI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫."""
    try:
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–º–ø–æ—Ä—Ç–∞
        try:
            from src.openai_handler import OpenAIHandler
        except ImportError:
            try:
                from openai_handler import OpenAIHandler
            except ImportError:
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ –≤ –ø—É—Ç—å
                current_dir = Path(__file__).parent
                sys.path.insert(0, str(current_dir))
                from openai_handler import OpenAIHandler
        
        api_key = check_api_key()
        if not api_key:
            return False
        
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ OpenAI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞...")
        handler = OpenAIHandler("gpt-3.5-turbo", api_key=api_key, temperature=0.1)
        print("‚úÖ OpenAI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥
        print("üß™ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥...")
        result = handler.translate("Êàë", ["—è", "–º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞"], use_description=False)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–µ–Ω: 'Êàë' -> '{result}'")
        
        # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
        stats = handler.get_statistics()
        print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞: {stats}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ OpenAI –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–µ: {e}")
        traceback.print_exc()
        return False

def test_llm_translator():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ—Å–Ω–æ–≤–Ω–æ–π LLM –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å OpenAI."""
    try:
        # –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–∞—Ä–∏–∞–Ω—Ç—ã –∏–º–ø–æ—Ä—Ç–∞
        try:
            from src.llm_translator import LLMTranslator
        except ImportError:
            try:
                from llm_translator import LLMTranslator
            except ImportError:
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–∞—Ç–∞–ª–æ–≥ –≤ –ø—É—Ç—å
                parent_dir = Path(__file__).parent.parent
                sys.path.insert(0, str(parent_dir))
                from src.llm_translator import LLMTranslator
        
        api_key = check_api_key()
        if not api_key:
            return False
        
        print("\nüß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ LLM –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–∞ —Å OpenAI...")
        translator = LLMTranslator("gpt-3.5-turbo", temperature=0.1)
        print("‚úÖ LLM –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫ —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ")
        
        # –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥
        print("üß™ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥ —á–µ—Ä–µ–∑ LLM –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫...")
        result = translator.translate("Êàë", ["—è", "–º–µ—Å—Ç–æ–∏–º–µ–Ω–∏–µ –ø–µ—Ä–≤–æ–≥–æ –ª–∏—Ü–∞"], use_description=False)
        print(f"‚úÖ –¢–µ—Å—Ç–æ–≤—ã–π –ø–µ—Ä–µ–≤–æ–¥ —É—Å–ø–µ—à–µ–Ω: 'Êàë' -> '{result}'")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤ LLM –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫–µ: {e}")
        traceback.print_exc()
        return False

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏."""
    print("üîç –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ OpenAI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏")
    print("=" * 50)
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∏–±–ª–∏–æ—Ç–µ–∫—É
    if not check_openai_library():
        return 1
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º API –∫–ª—é—á
    api_key = check_api_key()
    if not api_key:
        return 1
    
    # 3. –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–ª–∏–µ–Ω—Ç
    client = test_openai_client(api_key)
    if not client:
        return 1
    
    # 4. –¢–µ—Å—Ç–∏—Ä—É–µ–º –Ω–∞—à –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    if not test_openai_handler():
        return 1
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω–æ–π –ø–µ—Ä–µ–≤–æ–¥—á–∏–∫
    if not test_llm_translator():
        return 1
    
    print("\n‚úÖ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ—à–ª–∏ —É—Å–ø–µ—à–Ω–æ!")
    print("OpenAI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ.")
    return 0

if __name__ == "__main__":
    sys.exit(main())
    