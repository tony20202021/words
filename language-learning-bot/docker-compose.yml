version: '3.8'

services:
  postgres:
    image: postgres:14-alpine
    container_name: lang_bot_postgres
    environment:
      POSTGRES_USER: ${DB_USER:-lang_bot_user}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-lang_bot_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "${DB_PORT:-5432}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-lang_bot_user} -d ${DB_NAME:-lang_bot_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: backend/Dockerfile
    container_name: lang_bot_backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgresql://${DB_USER:-lang_bot_user}:${DB_PASSWORD:-password}@postgres:5432/${DB_NAME:-lang_bot_db}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./backend:/app/backend
    ports:
      - "${BACKEND_PORT:-8000}:8000"
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  frontend:
    build:
      context: .
      dockerfile: frontend/Dockerfile
    container_name: lang_bot_frontend
    depends_on:
      - backend
    environment:
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
      - BACKEND_URL=http://backend:8000
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    volumes:
      - ./frontend:/app/frontend
    command: python -m app.main

  mongodb:
    image: mongo:5.0
    container_name: lang_bot_mongodb
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER:-lang_bot_user}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD:-password}
      MONGO_INITDB_DATABASE: ${MONGO_DB:-lang_bot_db}
    volumes:
      - mongodb_data:/data/db
    ports:
      - "${MONGO_PORT:-27017}:27017"
    command: --auth

volumes:
  postgres_data:
  mongodb_data: