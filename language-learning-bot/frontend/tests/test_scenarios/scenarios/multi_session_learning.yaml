name: Multi-session Learning Test
user_id: 123456789
api_mock: study
auto_setup: true
steps:
  # Сессия 1: Начало изучения
  - type: command
    name: language
    asserts:
      - type: message_contains
        text: "Доступные языки для изучения"
      - type: message_contains
        text: "Выберите язык с помощью кнопок ниже"
      - type: state_contains
        data: ["_state", None]
      - type: keyboard_contains
        button_text: "Английский"
      - type: keyboard_contains
        button_text: "Французский"
      - type: keyboard_button_count
        count: 2

  - type: callback
    data: "lang_select_eng"
    asserts:
      - type: message_contains
        text: "Вы выбрали язык"
      - type: message_contains
        text: "Английский"
      - type: message_contains
        text: "Теперь вы можете"
      - type: message_contains
        text: "Начать изучение с помощью команды /study"
      - type: state_contains
        data: ["_state", None]

  - type: command
    name: study
    asserts:
      - type: message_contains
        position: -2
        text: "Начинаем изучение слов языка"
      - type: message_contains
        position: -2
        text: "Получаю список слов"
      - type: message_contains
        position: -1
        text: "Переведите на"
      - type: state_contains
        data: ["_state", <State 'StudyStates:studying'>]
        #  TODO перечислить все кнопки
      - type: keyboard_button_count
        count: 7

  # Пометим слово как известное
  - type: callback
    data: "word_know"
    asserts:
      - type: message_contains
        text: "Отлично!"
      - type: message_contains
        text: "Вы знаете это слово"
      - type: message_contains
        text: "Оценка обновлена на 1"
      - type: message_contains
        text: "Новый интервал: 1 (дней)" 
      - type: state_contains
        data: ["_state", <State 'StudyStates:studying'>]
      - type: keyboard_contains
        button_text: "К следующему слову"
      - type: keyboard_contains
        button_text: "Ой, все-таки не знаю"
      - type: keyboard_button_count
        count: 2

  - type: callback
    data: "confirm_next_word"
    asserts:
      - type: message_contains
        position: -2
        text: "Переходим к следующему слову"
      - type: message_contains
        position: -1
        text: "Переведите на"
      - type: state_contains
        data: ["_state", <State 'StudyStates:studying'>]
      - type: keyboard_contains
        button_text: "Ассоциация для"
        #  TODO перечислить все кнопки
      - type: keyboard_button_count
        count: 7

  # Симулируем окончание сессии
  - type: command
    name: start
    asserts:
      - type: message_contains
        text: "Здравствуйте"
      - type: message_contains
        text: "Добро пожаловать"
      - type: message_contains
        text: "/stats - Показать статистику"
      # - type: state_contains
      #   data: ["_state", None] # TODO Очистка состояния

  # Сессия 2: Продолжение изучения
  - type: command
    name: stats
    asserts:
      - type: message_contains
        text: "Статистика по изучению языков"
      - type: message_contains
        text: "Английский"
      - type: message_contains
        text: "Изучено слов: 1"
      - type: message_contains
        text: "Известно слов: 1"

  - type: callback
    data: "lang_select_eng"
    asserts:
      - type: message_contains
        text: "Вы выбрали язык"
      - type: message_contains
        text: "Английский"
      - type: message_contains
        text: "Ваши настройки для этого языка"
      - type: message_contains
        text: "Слова, помеченные как пропущенные: <b>Пропускать ❌</b>"
      - type: message_contains
        text: "Теперь вы можете"
      - type: message_contains
        text: "Начать изучение с помощью команды /study"
      - type: state_contains
        data: ["_state", None]

  - type: command
    name: study
    asserts:
      - type: message_contains
        position: -1
        text: "Переведите на"
      - type: state_contains
        data: ["_state", <State 'StudyStates:studying'>]

  # TODO
        # Проверяем, что первое слово не показывается (мы его уже изучили)
  # Для этого нужно настроить мок API клиента возвращать
  # разные слова для первого и второго вызова get_study_words
  