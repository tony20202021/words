"""
Utility functions for formatting.
UPDATED: Added support for writing images settings in formatting.
UPDATED: Removed hieroglyphic language restrictions - writing images are controlled by user settings only.
"""

from datetime import datetime
import locale
from typing import Dict, Any, List, Optional

from app.utils.logger import setup_logger
from app.utils.hint_constants import (
    HINT_SETTING_KEYS, 
    get_hint_setting_name
)

logger = setup_logger(__name__)

def format_date(date_str):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –¥–∞—Ç—É –∏–∑ ISO —Ñ–æ—Ä–º–∞—Ç–∞ –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
    
    Args:
        date_str: –°—Ç—Ä–æ–∫–∞ —Å –¥–∞—Ç–æ–π –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO –∏–ª–∏ 'N/A'
    
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –¥–∞—Ç–∞
    """
    if not date_str or date_str == 'N/A':
        return 'N/A'
    
    try:
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä—É—Å—Å–∫—É—é –ª–æ–∫–∞–ª—å –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞—Ç—ã
        try:
            locale.setlocale(locale.LC_TIME, 'ru_RU.UTF-8')
        except locale.Error:
            # –ï—Å–ª–∏ —Ä—É—Å—Å–∫–∞—è –ª–æ–∫–∞–ª—å –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—É—é
            locale.setlocale(locale.LC_TIME, '')
        
        # –ï—Å–ª–∏ –¥–∞—Ç–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –≤–∏–¥–µ —Å—Ç—Ä–æ–∫–∏, –ø–∞—Ä—Å–∏–º –µ–µ
        if isinstance(date_str, str):
            # –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–ø–∞—Ä—Å–∏—Ç—å ISO –¥–∞—Ç—É
            if 'T' in date_str:
                date_part = date_str.split('T')[0]
            else:
                date_part = date_str
                
            date_obj = datetime.strptime(date_part, '%Y-%m-%d')
        else:
            # –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–Ω –æ–±—ä–µ–∫—Ç datetime, –∏—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é
            date_obj = date_str
        
        # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –¥–∞—Ç—É –≤ –≤–∏–¥–µ "–¥–µ–Ω—å –º–µ—Å—è—Ü –≥–æ–¥"
        # %d - –¥–µ–Ω—å –º–µ—Å—è—Ü–∞, %B - –ø–æ–ª–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–µ—Å—è—Ü–∞, %Y - –≥–æ–¥ –≤ 4-—Ö –∑–Ω–∞—á–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ
        formatted_date = date_obj.strftime('%d %B %Y')
        
        return formatted_date
    except Exception as e:
        logger.error(f"Error formatting date: {e}")
        return str(date_str)

# –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º –∫–æ–¥–æ–º
format_date_standard = format_date

def format_settings_text(
    start_word, 
    skip_marked, 
    use_check_date, 
    show_check_date,
    show_debug, 
    hint_settings,
    show_writing_images=False,
    show_short_captions=True,
    show_big=False,
    receive_messages=True,
    prefix="", 
    suffix=""
):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫ –æ–±—É—á–µ–Ω–∏—è.
    –û–ë–ù–û–í–õ–ï–ù–û: –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–∞—Ä—Ç–∏–Ω–æ–∫ –Ω–∞–ø–∏—Å–∞–Ω–∏—è.
    –û–ë–ù–û–í–õ–ï–ù–û: –£–±—Ä–∞–Ω—ã –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è –ø–æ –∏–µ—Ä–æ–≥–ª–∏—Ñ–∏—á–µ—Å–∫–∏–º —è–∑—ã–∫–∞–º.
    
    Args:
        start_word: –ù–æ–º–µ—Ä —Å–ª–æ–≤–∞ –¥–ª—è –Ω–∞—á–∞–ª–∞ –æ–±—É—á–µ–Ω–∏—è
        skip_marked: –ü—Ä–æ–ø—É—Å–∫–∞—Ç—å –ª–∏ –ø–æ–º–µ—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        use_check_date: –£—á–∏—Ç—ã–≤–∞—Ç—å –ª–∏ –¥–∞—Ç—É –ø—Ä–æ–≤–µ—Ä–∫–∏
        show_date: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –¥–∞—Ç—É –ø—Ä–æ–≤–µ—Ä–∫–∏
        show_debug: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –æ—Ç–ª–∞–¥–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        hint_settings: –°–ª–æ–≤–∞—Ä—å —Å –∏–Ω–¥–∏–≤–∏–¥—É–∞–ª—å–Ω—ã–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫
        show_writing_images: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è
        show_short_captions: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–µ –ø–æ–¥–ø–∏—Å–∏
        show_big: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –∫—Ä—É–ø–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ
        receive_messages: –ü–æ–ª—É—á–∞—Ç—å –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
        prefix: –¢–µ–∫—Å—Ç –ø–µ—Ä–µ–¥ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
        suffix: –¢–µ–∫—Å—Ç –ø–æ—Å–ª–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
        
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç –Ω–∞—Å—Ç—Ä–æ–µ–∫
    """
    settings_text = f"{prefix}"
    
    short_captions_status = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å ‚úÖ" if show_short_captions else "–°–∫—Ä—ã–≤–∞—Ç—å ‚ùå"
    settings_text += f"   ‚Ä¢ –ö–æ—Ä–æ—Ç–∫–∏–µ –ø–æ–¥–ø–∏—Å–∏: <b>{short_captions_status}</b>\n"
    
    settings_text += f"   ‚Ä¢ –ù–∞—á–∞–ª—å–Ω–æ–µ —Å–ª–æ–≤–æ: <b>{start_word}</b>\n"
    
    skip_status = "–ü—Ä–æ–ø—É—Å–∫–∞—Ç—å ‚ùå" if skip_marked else "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å ‚úÖ"
    settings_text += f"   ‚Ä¢ –ò—Å–∫–ª—é—á–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞: <b>{skip_status}</b>\n"
    
    settings_text += f"üñºÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–∞—Ç—ã –ø—Ä–æ–≤–µ—Ä–∫–∏:</b>\n"
    
    date_status = "–£—á–∏—Ç—ã–≤–∞—Ç—å ‚úÖ" if use_check_date else "–ù–µ —É—á–∏—Ç—ã–≤–∞—Ç—å ‚ùå"
    settings_text += f"   ‚Ä¢ –ü–µ—Ä–∏–æ–¥ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è: <b>{date_status}</b>\n"
    
    date_status = "–ø–æ–∫–∞–∑—ã–≤–∞—Ç—å ‚úÖ" if show_check_date else "—Å–∫—Ä—ã–≤–∞—Ç—å ‚ùå"
    settings_text += f"   ‚Ä¢ –î–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: <b>{date_status}</b>\n"
    
    # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–æ–¥—Å–∫–∞–∑–æ–∫
    settings_text += f"üí° <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–¥—Å–∫–∞–∑–æ–∫:</b>\n"
    
    for setting_key in HINT_SETTING_KEYS:
        setting_name = get_hint_setting_name(setting_key)
        setting_value = hint_settings.get(setting_key, True)
        status = "–í–∫–ª—é—á–µ–Ω–æ ‚úÖ" if setting_value else "–û—Ç–∫–ª—é—á–µ–Ω–æ ‚ùå"
        settings_text += f"   ‚Ä¢ {setting_name}: <b>{status}</b>\n"
    
    settings_text += f"üñºÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è:</b>\n"
    
    big_word_status = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å ‚úÖ" if show_big else "–°–∫—Ä—ã–≤–∞—Ç—å ‚ùå"
    settings_text += f"   ‚Ä¢ –ö—Ä—É–ø–Ω–æ–µ –Ω–∞–ø–∏—Å–∞–Ω–∏–µ: <b>{big_word_status}</b>\n"

    show_writing_images = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å ‚úÖ" if show_writing_images else "–°–∫—Ä—ã–≤–∞—Ç—å ‚ùå"
    settings_text += f"   ‚Ä¢ –ö–∞—Ä—Ç–∏–Ω–∫–∏ –Ω–∞–ø–∏—Å–∞–Ω–∏—è: <b>{show_writing_images}</b>\n"
    
    # –°—Ç–∞—Ç—É—Å –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –æ—Ç–ª–∞–¥–æ—á–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    debug_status = "–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å ‚úÖ" if show_debug else "–°–∫—Ä—ã–≤–∞—Ç—å ‚ùå"
    settings_text += f"üîç –û—Ç–ª–∞–¥–æ—á–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: <b>{debug_status}</b>"
    
    # –°—Ç–∞—Ç—É—Å –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
    receive_messages_status = "–ü–æ–ª—É—á–∞—Ç—å ‚úÖ" if receive_messages else "–ù–µ –ø–æ–ª—É—á–∞—Ç—å ‚ùå"
    settings_text += f"üì§ –ü–æ–ª—É—á–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è: <b>{receive_messages_status}</b>"
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Å—É—Ñ—Ñ–∏–∫—Å
    if suffix:
        settings_text += suffix
    
    return settings_text

def format_study_word_message(
    language_name_ru, 
    language_name_foreign, 
    word_number, 
    translation, 
    is_skipped, 
    score,
    check_interval, 
    next_check_date,
    score_changed=False,
    show_word=False,
    word_foreign=None,
    transcription=None,
    show_big=False,
    show_check_date=True
):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–ª–æ–≤–∞ –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∏–∑—É—á–µ–Ω–∏—è.
    UPDATED: Added clickable link for word enlargement when word is shown.
    
    Args:
        language_name_ru: –ù–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º
        language_name_foreign: –ù–∞–∑–≤–∞–Ω–∏–µ —è–∑—ã–∫–∞ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º
        word_number: –ù–æ–º–µ—Ä —Å–ª–æ–≤–∞
        translation: –ü–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞
        is_skipped: –§–ª–∞–≥ –ø—Ä–æ–ø—É—Å–∫–∞ —Å–ª–æ–≤–∞
        score: –û—Ü–µ–Ω–∫–∞ —Å–ª–æ–≤–∞
        check_interval: –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏
        next_check_date: –î–∞—Ç–∞ —Å–ª–µ–¥—É—é—â–µ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
        score_changed: –ë—ã–ª–∞ –ª–∏ –∏–∑–º–µ–Ω–µ–Ω–∞ –æ—Ü–µ–Ω–∫–∞
        show_word: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ —Å–∞–º–æ —Å–ª–æ–≤–æ –∏ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—é
        word_foreign: –°–ª–æ–≤–æ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º —è–∑—ã–∫–µ
        transcription: –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è —Å–ª–æ–≤–∞
        show_big: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –±–æ–ª—å—à–æ–µ —Å–ª–æ–≤–æ
        show_check_date: –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –ª–∏ –¥–∞—Ç—É –ø—Ä–æ–≤–µ—Ä–∫–∏
    Returns:
        str: –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
    """
    message = (
        f"üìù –Ø–∑—ã–∫: \"{language_name_ru} ({language_name_foreign})\":\n\n"
        f"–°–ª–æ–≤–æ –Ω–æ–º–µ—Ä: <b>{word_number}</b>\n\n" 
    )
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å—Ç–∞—Ç—É—Å–µ –ø—Ä–æ–ø—É—Å–∫–∞ - –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —É—Å–ª–æ–≤–∏–µ
    if is_skipped:
        message += "‚è© <b>–°—Ç–∞—Ç—É—Å: —ç—Ç–æ —Å–ª–æ–≤–æ –ø–æ–º–µ—á–µ–Ω–æ –¥–ª—è –ø—Ä–æ–ø—É—Å–∫–∞.</b>\n\n"
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–µ—Ä–∏–æ–¥–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏—è
    if (score == 1) and show_check_date:
        if score_changed:
            if check_interval and check_interval > 0:
                message += f"–°–ª–µ–¥—É—é—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {check_interval} (–¥–Ω–µ–π)\n"
            if next_check_date:
                formatted_date = format_date(next_check_date)
                message += f"–°–ª–µ–¥—É—é—â–µ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ: {formatted_date} \n\n" 
        else:
            if (check_interval > 0) or (next_check_date):
                message += f"‚è± –í—ã –∑–Ω–∞–ª–∏ —ç—Ç–æ —Å–ª–æ–≤–æ:\n"
            if check_interval and check_interval > 0:
                message += f"–ü—Ä–µ–¥—ã–¥—É—â–∏–π –∏–Ω—Ç–µ—Ä–≤–∞–ª: {check_interval} (–¥–Ω–µ–π)\n"
            if next_check_date:
                formatted_date = format_date(next_check_date)
                message += f"–ó–∞–ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –ø–æ–≤—Ç–æ—Ä–µ–Ω–∏–µ: {formatted_date} \n\n" 
    
    message += f"üîç –°–ª–æ–≤–æ –Ω–∞ —Ä—É—Å—Å–∫–æ–º:\n<b>{translation}</b>\n"
    
    # UPDATED: –ï—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å —Å–ª–æ–≤–æ, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ —Å –∫–ª–∏–∫–∞–±–µ–ª—å–Ω–æ–π —Å—Å—ã–ª–∫–æ–π
    if show_word and word_foreign:
        # –°–æ–∑–¥–∞–µ–º –∫–ª–∏–∫–∞–±–µ–ª—å–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –∫–æ–º–∞–Ω–¥—É /show_big
        if show_big:
            message += f"\nüìù –°–ª–æ–≤–æ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º:\n<b>{word_foreign}</b>(/show_big) üîç\n\n"
        else:
            message += f"\nüìù –°–ª–æ–≤–æ –Ω–∞ –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–º:\n<b>{word_foreign}</b>\n\n"
        if transcription:
            escaped_transcription = transcription.replace('\n', ',')
            message += f"üîä –¢—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏—è:\n<b>[{escaped_transcription}]</b>\n\n"

    return message


def format_date_friendly(date_str: str) -> str:
    """
    Format date in a user-friendly way.
    –î—Ä—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞—Ç—ã.
    
    Args:
        date_str: ISO date string
        
    Returns:
        str: User-friendly date string
    """
    try:
        if 'T' in date_str:
            date_part = date_str.split('T')[0]
        else:
            date_part = date_str
            
        date_obj = datetime.strptime(date_part, '%Y-%m-%d')
        
        # Calculate days difference
        today = datetime.now().date()
        study_date = date_obj.date()
        days_diff = (today - study_date).days
        
        if days_diff == 0:
            return "—Å–µ–≥–æ–¥–Ω—è"
        elif days_diff == 1:
            return "–≤—á–µ—Ä–∞"
        elif days_diff < 7:
            return f"{days_diff} –¥–Ω. –Ω–∞–∑–∞–¥"
        elif days_diff < 30:
            weeks = days_diff // 7
            return f"{weeks} –Ω–µ–¥. –Ω–∞–∑–∞–¥"
        else:
            return date_obj.strftime('%d.%m.%Y')
            
    except Exception as e:
        logger.warning(f"Error formatting date {date_str}: {e}")
        return date_str.split('T')[0] if 'T' in date_str else date_str
    