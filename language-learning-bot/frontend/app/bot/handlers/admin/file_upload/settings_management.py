"""
Handlers for settings management during file upload.
Updated with FSM states for better navigation control.
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.utils.logger import setup_logger
from app.bot.states.centralized_states import AdminStates
from app.utils.callback_constants import CallbackData

logger = setup_logger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏
settings_router = Router()

@settings_router.callback_query(AdminStates.configuring_upload_settings, F.data == CallbackData.TOGGLE_HEADERS)
@settings_router.callback_query(AdminStates.configuring_columns, F.data == CallbackData.TOGGLE_HEADERS)
async def toggle_headers_setting(callback: CallbackQuery, state: FSMContext):
    """
    Toggle the 'has_headers' setting.
    
    Args:
        callback: The callback query from Telegram
        state: The FSM state context
    """
    logger.info("Toggling headers setting")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    user_data = await state.get_data()
    current_value = user_data.get('has_headers', False)
    
    # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    new_value = not current_value
    await state.update_data(has_headers=new_value)
    
    # ‚úÖ –ù–û–í–û–ï: –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    current_state = await state.get_state()
    if current_state != AdminStates.configuring_columns.state:
        await state.set_state(AdminStates.configuring_upload_settings)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    user_data = await state.get_data()
    has_headers = user_data.get('has_headers', False)
    clear_existing = user_data.get('clear_existing', False)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    column_settings_str = format_column_settings(user_data)
    
    # –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è f-—Å—Ç—Ä–æ–∫ —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏)
    headers_btn_text = "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if has_headers else "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    clear_btn_text = "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if clear_existing else "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text=headers_btn_text, 
        callback_data=CallbackData.TOGGLE_HEADERS
    ))
    builder.add(InlineKeyboardButton(
        text=clear_btn_text, 
        callback_data=CallbackData.TOGGLE_CLEAR_EXISTING
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ –∫–Ω–æ–ø–∫—É
    language_id = user_data.get('selected_language_id')
    column_info = get_column_info_text(user_data)
    builder.add(InlineKeyboardButton(
        text=f"üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ {column_info}", 
        callback_data=f"{CallbackData.SELECT_COLUMN_TYPE}:{language_id}"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å", 
        callback_data=CallbackData.CONFIRM_UPLOAD
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", 
        callback_data=CallbackData.BACK_TO_ADMIN 
        # TODO - –ø–æ —ç—Ç–æ–π –∫–Ω–æ–ø–∫–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø–µ—Ä–µ—Ö–æ–¥ –Ω–∞ —ç–∫—Ä–∞–Ω "–ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", –±–µ–∑ –Ω–∏–∫–∞–∫–æ–π –¥–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
        # –Ω–∞–¥–æ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω "–†–µ–∂–∏–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω!" —Å–æ –≤—Å–µ–π –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ–π
    ))
    builder.adjust(1)
    
    # TODO  –∫–∞–∂–µ—Ç—Å—è —ç—Ç–æ—Ç —Ç–µ–∫—Å—Ç –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è –≤ 2 —Ä–∞–∑–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö
    # –Ω–∞–π—Ç–∏ –∏ –≤—ã–Ω–µ—Å—Ç–∏ –≤ –æ–±—â—É—é —Ñ—É–Ω–∫—Ü–∏—é
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:\n\n"
        f"‚úÖ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: \"{('–î–∞' if has_headers else '–ù–µ—Ç')}\"\n"
        f"‚úÖ –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: \"{('–î–∞' if clear_existing else '–ù–µ—Ç')}\"\n"
        f"{column_settings_str}\n"
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–ª–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.",
        reply_markup=builder.as_markup()
    )
    
    await callback.answer()

@settings_router.callback_query(AdminStates.configuring_upload_settings, F.data == CallbackData.TOGGLE_CLEAR_EXISTING)
@settings_router.callback_query(AdminStates.configuring_columns, F.data == CallbackData.TOGGLE_CLEAR_EXISTING)
async def toggle_clear_existing_setting(callback: CallbackQuery, state: FSMContext):
    """
    Toggle the 'clear_existing' setting.
    
    Args:
        callback: The callback query from Telegram
        state: The FSM state context
    """
    logger.info("Toggling clear existing setting")
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    user_data = await state.get_data()
    current_value = user_data.get('clear_existing', False)
    
    # –ò–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
    new_value = not current_value
    await state.update_data(clear_existing=new_value)
    
    # ‚úÖ –ù–û–í–û–ï: –£–±–µ–∂–¥–∞–µ–º—Å—è, —á—Ç–æ –º—ã –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    current_state = await state.get_state()
    if current_state != AdminStates.configuring_columns.state:
        await state.set_state(AdminStates.configuring_upload_settings)
    
    # –ü–æ–ª—É—á–∞–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    user_data = await state.get_data()
    has_headers = user_data.get('has_headers', False)
    clear_existing = user_data.get('clear_existing', False)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    column_settings_str = format_column_settings(user_data)
    
    # –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è f-—Å—Ç—Ä–æ–∫ —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏)
    headers_btn_text = "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if has_headers else "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    clear_btn_text = "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if clear_existing else "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æmen—è—Ç—å –Ω–∞ \"–î–∞\""
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text=headers_btn_text, 
        callback_data=CallbackData.TOGGLE_HEADERS
    ))
    builder.add(InlineKeyboardButton(
        text=clear_btn_text, 
        callback_data=CallbackData.TOGGLE_CLEAR_EXISTING
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ –∫–Ω–æ–ø–∫—É
    language_id = user_data.get('selected_language_id')
    column_info = get_column_info_text(user_data)
    builder.add(InlineKeyboardButton(
        text=f"üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ {column_info}", 
        callback_data=f"{CallbackData.SELECT_COLUMN_TYPE}:{language_id}"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å", 
        callback_data=CallbackData.CONFIRM_UPLOAD
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", 
        callback_data=CallbackData.BACK_TO_ADMIN
    ))
    builder.adjust(1)
    
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:\n\n"
        f"‚úÖ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: \"{('–î–∞' if has_headers else '–ù–µ—Ç')}\"\n"
        f"‚úÖ –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: \"{('–î–∞' if clear_existing else '–ù–µ—Ç')}\"\n"
        f"{column_settings_str}\n"
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–ª–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.",
        reply_markup=builder.as_markup()
    )
    
    await callback.answer()

@settings_router.callback_query(AdminStates.configuring_upload_settings, F.data == CallbackData.BACK_TO_SETTINGS)
@settings_router.callback_query(AdminStates.configuring_columns, F.data == CallbackData.BACK_TO_SETTINGS)
async def process_back_to_settings(callback: CallbackQuery, state: FSMContext):
    """
    Handle going back to file settings screen.
    
    Args:
        callback: The callback query from Telegram
        state: The FSM state context
    """
    logger.info("Back to upload settings")
    
    # ‚úÖ –ù–û–í–û–ï: –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
    await state.set_state(AdminStates.configuring_upload_settings)
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
    user_data = await state.get_data()
    has_headers = user_data.get('has_headers', False)
    clear_existing = user_data.get('clear_existing', False)
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫, –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
    column_settings_str = format_column_settings(user_data)
    
    # –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫ (–±–µ–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è f-—Å—Ç—Ä–æ–∫ —Å —ç–∫—Ä–∞–Ω–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –∫–∞–≤—ã—á–∫–∞–º–∏)
    headers_btn_text = "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if has_headers else "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    clear_btn_text = "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if clear_existing else "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text=headers_btn_text, 
        callback_data=CallbackData.TOGGLE_HEADERS
    ))
    builder.add(InlineKeyboardButton(
        text=clear_btn_text, 
        callback_data=CallbackData.TOGGLE_CLEAR_EXISTING
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ –∫–Ω–æ–ø–∫—É
    language_id = user_data.get('selected_language_id')
    column_info = get_column_info_text(user_data)
    builder.add(InlineKeyboardButton(
        text=f"üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ {column_info}", 
        callback_data=f"{CallbackData.SELECT_COLUMN_TYPE}:{language_id}"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å", 
        callback_data=CallbackData.CONFIRM_UPLOAD
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", 
        callback_data=CallbackData.BACK_TO_ADMIN
    ))
    builder.adjust(1)
    
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:\n\n"
        f"‚úÖ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: \"{('–î–∞' if has_headers else '–ù–µ—Ç')}\"\n"
        f"‚úÖ –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: \"{('–î–∞' if clear_existing else '–ù–µ—Ç')}\"\n"
        f"{column_settings_str}\n"
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–ª–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.",
        reply_markup=builder.as_markup()
    )
    
    await callback.answer()

# ‚úÖ –ù–û–í–û–ï: –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∫—É –∏–∑ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
@settings_router.callback_query(AdminStates.configuring_upload_settings, F.data == CallbackData.BACK_TO_ADMIN)
async def process_back_to_admin_from_settings(callback: CallbackQuery, state: FSMContext):
    """
    Handle going back to admin menu from upload settings.
    
    Args:
        callback: The callback query from Telegram
        state: The FSM state context
    """
    logger.info("Back to admin from upload settings")
    
    # –û—á–∏—â–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞
    await state.clear()
    
    # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –∏ –≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–∏–≤–Ω–æ–µ –º–µ–Ω—é
    from app.bot.handlers.admin.admin_basic_handlers import handle_admin_mode
    await handle_admin_mode(callback, state, is_callback=True)
    
    await callback.answer()

def format_column_settings(user_data):
    """
    –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏.
    
    Args:
        user_data: –î–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        str: –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ç—Ä–æ–∫–∞ —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫
    column_settings = []
    for col_type in ["number", "word", "transcription", "translation"]:
        col_key = f"column_{col_type}"
        col_value = user_data.get(col_key)
        if col_value is not None:
            column_settings.append(f"‚úÖ {col_key.replace('column_', '–ö–æ–ª–æ–Ω–∫–∞ ')}: {col_value}")
    
    # –ï—Å–ª–∏ –Ω–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–æ–∫, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É
    if not column_settings:
        return ""
    
    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω—É—é —Å—Ç—Ä–æ–∫—É
    return "–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫:\n" + "\n".join(column_settings) + "\n"

def get_column_info_text(user_data):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Ç–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–Ω—ã—Ö –∫–æ–ª–æ–Ω–∫–∞—Ö –¥–ª—è –∫–Ω–æ–ø–∫–∏.
    
    Args:
        user_data: –î–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        str: –¢–µ–∫—Å—Ç —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–æ–ª–æ–Ω–∫–∞—Ö
    """
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∫–æ–ª–æ–Ω–æ–∫
    column_values = []
    for col_type in ["number", "word", "transcription", "translation"]:
        col_value = user_data.get(f"column_{col_type}")
        if col_value is not None:
            column_values.append(str(col_value))
    
    # –ï—Å–ª–∏ –µ—Å—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫, –¥–æ–±–∞–≤–ª—è–µ–º –∏—Ö –≤ —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏
    if column_values:
        return f"(—Å–µ–π—á–∞—Å: {', '.join(column_values)})"
    
    return ""

# ‚úÖ –ù–û–í–û–ï: –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –æ–±—â–µ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≥—Ä—É–∑–∫–∏
def create_upload_settings_interface(user_data: dict) -> tuple:
    """
    –°–æ–∑–¥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞.
    
    Args:
        user_data: –î–∞–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        
    Returns:
        tuple: (message_text, keyboard_markup)
    """
    has_headers = user_data.get('has_headers', False)
    clear_existing = user_data.get('clear_existing', False)
    language_id = user_data.get('selected_language_id')
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å—Ç—Ä–æ–∫—É —Å —Ç–µ–∫—É—â–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ –∫–æ–ª–æ–Ω–æ–∫
    column_settings_str = format_column_settings(user_data)
    
    # –¢–µ–∫—Å—Ç—ã –¥–ª—è –∫–Ω–æ–ø–æ–∫
    headers_btn_text = "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if has_headers else "üìù –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    clear_btn_text = "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–ù–µ—Ç\"" if clear_existing else "üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: –ø–æ–º–µ–Ω—è—Ç—å –Ω–∞ \"–î–∞\""
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text=headers_btn_text, 
        callback_data=CallbackData.TOGGLE_HEADERS
    ))
    builder.add(InlineKeyboardButton(
        text=clear_btn_text, 
        callback_data=CallbackData.TOGGLE_CLEAR_EXISTING
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –∫–æ–ª–æ–Ω–æ–∫ –≤ –∫–Ω–æ–ø–∫—É
    column_info = get_column_info_text(user_data)
    builder.add(InlineKeyboardButton(
        text=f"üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ {column_info}", 
        callback_data=f"{CallbackData.SELECT_COLUMN_TYPE}:{language_id}"
    ))
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å", 
        callback_data=CallbackData.CONFIRM_UPLOAD
    ))
    
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –û—Ç–º–µ–Ω–∞", 
        callback_data=CallbackData.BACK_TO_ADMIN
    ))
    builder.adjust(1)
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
    message_text = (
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞:\n\n"
        f"‚úÖ –§–∞–π–ª —Å–æ–¥–µ—Ä–∂–∏—Ç –∑–∞–≥–æ–ª–æ–≤–∫–∏: \"{('–î–∞' if has_headers else '–ù–µ—Ç')}\"\n"
        f"‚úÖ –û—á–∏—Å—Ç–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Å–ª–æ–≤–∞: \"{('–î–∞' if clear_existing else '–ù–µ—Ç')}\"\n"
        f"{column_settings_str}\n"
        "–ù–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã, –Ω–∞–∂–º–∏—Ç–µ '–ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏' –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–ª–æ–Ω–æ–∫ –∏–ª–∏ '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏ –∑–∞–≥—Ä—É–∑–∏—Ç—å' –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ —Ñ–∞–π–ª–∞."
    )
    
    return message_text, builder.as_markup()
