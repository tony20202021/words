"""
Handlers for template processing during file upload.
"""

from aiogram import Router, F
from aiogram.types import CallbackQuery, InlineKeyboardButton
from aiogram.fsm.context import FSMContext
from aiogram.utils.keyboard import InlineKeyboardBuilder
from app.utils.logger import setup_logger
from app.bot.states.centralized_states import AdminStates
from app.utils.callback_constants import CallbackData

logger = setup_logger(__name__)

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —à–∞–±–ª–æ–Ω–æ–≤ –∫–æ–ª–æ–Ω–æ–∫
template_router = Router()

@template_router.callback_query(AdminStates.configuring_columns, F.data.startswith("upload_columns:"))
async def process_column_template(callback: CallbackQuery, state: FSMContext):
    """
    Process predefined column template selection.
    
    Args:
        callback: The callback query from Telegram
        state: The FSM state context
    """
    # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ callback_data
    parts = callback.data.split(":")
    column_indices = parts[1].split(",")
    language_id = parts[2]
    
    logger.info(f"Selected column template: {column_indices} for language ID: {language_id}")
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –∏–Ω–¥–µ–∫—Å—ã –∏–∑ —Å—Ç—Ä–æ–∫ –≤ —Ü–µ–ª—ã–µ —á–∏—Å–ª–∞
    try:
        column_number = int(column_indices[0])
        column_word = int(column_indices[1])
        column_transcription = int(column_indices[2])
        column_translation = int(column_indices[3])
    except (IndexError, ValueError) as e:
        logger.error(f"Error parsing column template: {e}")
        await callback.message.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —à–∞–±–ª–æ–Ω–∞ –∫–æ–ª–æ–Ω–æ–∫. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –≤—Ä—É—á–Ω—É—é.")
        await callback.answer()
        return
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ –∫–æ–ª–æ–Ω–∫–∏ –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    await state.update_data({
        "column_number": column_number,
        "column_word": column_word,
        "column_transcription": column_transcription,
        "column_translation": column_translation
    })
    
    # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —à–∞–±–ª–æ–Ω–µ
    template_info = (
        f"‚úÖ –í—ã–±—Ä–∞–Ω —à–∞–±–ª–æ–Ω:\n"
        f"- –ö–æ–ª–æ–Ω–∫–∞ –Ω–æ–º–µ—Ä–∞: {column_number}\n"
        f"- –ö–æ–ª–æ–Ω–∫–∞ —Å–ª–æ–≤–∞: {column_word}\n"
        f"- –ö–æ–ª–æ–Ω–∫–∞ —Ç—Ä–∞–Ω—Å–∫—Ä–∏–ø—Ü–∏–∏: {column_transcription}\n"
        f"- –ö–æ–ª–æ–Ω–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–∞: {column_translation}\n\n"
        f"–¢–µ–ø–µ—Ä—å –º–æ–∂–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª –∏–ª–∏ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ —Ç–æ—á–Ω–µ–µ."
    )
    
    # –°–æ–∑–¥–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ –æ–ø—Ü–∏–µ–π —Ä—É—á–Ω–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    builder = InlineKeyboardBuilder()
    builder.add(InlineKeyboardButton(
        text="‚úÖ –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª —Å —ç—Ç–∏–º–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏",
        callback_data="confirm_upload"
    ))
    builder.add(InlineKeyboardButton(
        text="üîß –ù–∞—Å—Ç—Ä–æ–∏—Ç—å –∫–æ–ª–æ–Ω–∫–∏ –≤—Ä—É—á–Ω—É—é",
        callback_data=f"{CallbackData.SELECT_COLUMN_TYPE}:{language_id}"
    ))
    builder.add(InlineKeyboardButton(
        text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥ –∫ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º",
        callback_data="back_to_settings"
    ))
    builder.adjust(1)  # –ü–æ –æ–¥–Ω–æ–π –∫–Ω–æ–ø–∫–µ –≤ —Å—Ç—Ä–æ–∫–µ
    
    await callback.message.edit_text(
        template_info,
        reply_markup=builder.as_markup()
    )
    
    await callback.answer()

